lm(x ~y)
traceback()
debug(lm)
lm(x ~y)
debug(lm)
lm(x ~y)
debug(lm)
lm(x ~y)
options(error = recover)
read.csv("nosuchfile")
2
c
x <- list(a = 1:5, b = rnorm(10))
x
lapply(x, mean)
?lapply
?lapply
?rnorm
rnorm(20,1)
rnorm(20,5)
rnorm(20,20)
rnorm(20)
x <- list(a = 1:4, b = rnorm(10), c = rnorm(20, 1), d = rnorm(100, 5))
d
x[d]
x["d"]
x["c"]
x["b"]
x["a"]
x
lapply(x, mean)
sapply(x, mean)
lapply(x, mean)
lapply(x, runif)
x <- 1:4
lapply(x, runif)
runif(1)
runif(5)
runif(2)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1)
runif(1,2)
runif(1)
x <- 1:4
lapply(x, runif, min=0,max=10)
runif()
runif
lapply
lapply(x, runif, min=5,max=10)
lapply(x, runif, min=9,max=10)
lapply(x, runif, min=9.9,max=10)
x <- list(a = matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x[a]
x["a"]
x["b"]
x
?elt
x["a"]
x["a",1]
x[,1]
x <- list(a = matrix(1:4, 2, 2), b = matrix(1:6, 3, 2))
x
lapply(x, function(elt) { elt[,1] } )
elt
?elt
??elt
lapply
lapply()
q
exit
x
x[,1]
dim(x)
x <- list(a = 1:4, b = rnorm(10), c = rnorm(20, 1), d = rnorm(100, 5))
lapply(x,mean)
sapply(x,mean)
a <- sapply(x,mean)
class(a)
a
b <- lapply(x,mean)
class(b)
b
split
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3,10)
f
split(x,f\)
split(x,f)
lapply(split(x,f), mean)
sapply(split(x,f), mean)
sapply(split(x,f), mean)
s <- split(airquality, airquality$Month)
s
str(s)
class(airquality)
str(tapply)
tapply()
tapply()
tapply
str(tapply)
x <- c(rnorm(10), runif(10), rnorm(10, 1))
x
f <- gl(3,10)
f
table(x,f,mean())
table(x,f,mean
)
x
f
tapply(x,f,mean)
tapply(x,f,mean, simplify = TRUE)
tapply(x,f,mean, simplify = FALSE)
tapply(x,f,range, simplify = FALSE)
tapply(x,f,range, simplify = TRUE)
str(apply)
x <- matrix(rnorm(200), 20, 10)
x
x <- matrix(rnorm(200), 20, 10)
x
x
x
x
x
x
x <- matrix(rnorm(200), 20, 10)
x
x
apply(x,2,mean)
apply(x,2,sum)
c <- apply(x,2,sum)
class(c)
rowSums(x)
colSums()
colSums(x)
?quantile
str(mapply)
list(rep(1, 4), rep(2, 3), rep(3, 2), rep(4, 1))
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect(flags,class)
cls_vect <- (flags,class)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
swirl()
sapply(flags, unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags, class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
View(telegram)
x<-(1:5)
y<-(6,10)
y<-(6:10)
plot(x,y)
sum(x,y,z)
ls()
ls()
library(datasets)
str(airquality)
m<-matrix(rnorm(100),10,10)
str(m)
m[,1]
m[,2]
s <- split(airquality,airquality$Month)
s
str(s)
s
set.seed(1)
rnorm(5)
rnorm(5)
rnorm(5)
rnorm(5)
rnorm(5)
set.seed(1)
rnorm(5)
set.seed(1)
rnorm(5)
rpois(10.10)
rpois(10,10)
rbinom(100,1,0.5)
rbinom(100,1,0.9)
set.seed(1)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(1:10,4)
sample(letters, 5)
sample(letters, 5)
sample(letters, 5)
sample(letters, 5)
sample(1:10)
sample(1:10)
sample(1:10)
sample(1:10)
set.seed(1)
sample(1:10)
set.seed(1)
sample(1:10)
sample(1:10, replace = TRUE)
sample(1:10, replace = TRUE)
sample(1:10, replace = TRUE)
system.time()
system.time(ls)
system.time()
system.time(readLines("http://www.jhsph.edu"))
system.time({
n <- 1000
r <- numeric(n)
for (i in 1:n) {
x <- rnorm(n)
r[i] <- mean(x)
}
})
lm(y ~ x)
?lm
set.seed(1)
rpois(5, 2)
x <- rpois(5, 2)
class(x)
set.seed(10)
x <- rep(0:1, each = 5)
x
e <- rnorm(10, 0, 20)
e
y <- 0.5 + 2 * x + e
y
summary(y)
?rbinom
library(datasets)
Rprof()
fit <- lm(y ~ x1 + x2)
Rprof(NULL)
?set.seed
rm(ls())
ls
ls()
rm(ls(*))
swirl()
library(swirl)
list=ls()
list
rm(list)
ls
ls()
list<-ls()
list
rm(list)
ls
ls()
rm(list=rm())
ls
ls()
rm(list=ls())
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, nrow = 10
)
head(plants,10
)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period).
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = FALSE)
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1), 100, replace = TRUE, prob = c(0.3,0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1,size = 100,prob = 0.7)
flips2 <- rbinom(1:100,size = 1,prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, mean = 100, sd = 25)
?rpois
rpois(5,10)
replicate(100, rpois(5,10))
my_pois <- replicate(100, rpois(5,10))
my_pois
colMeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y =
| cars$dist, ...)
?plot
plot(x = cars$speed, y = cars$dist, xlab = Speed, ylab = Dist)
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Dist")
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main main = "My Plot")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance", main = "My Plot")
plot(cars,main = "My Plot")
plot(cars,main = "My Plot", sub="My Plot Subtitle")
plot(cars, sub="My Plot Subtitle")
?plot
?par
plot(cars, col(2))
plot(cars, col =2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(mtcars, formula = mpg ~ cyl)
boxplot(data = mtcars, formula = mpg ~ cyl)
boxplot(formula = mpg ~ cyl, data=mtcars)
hist(mtcars$mpg)
getwd()
dir.create("/Users/andre/Documents/Training/Coursera/RWorkingDirectory/C2W3/")
dir
dir()
setwd("C2w3")
getwd
getdw()
getwd()
library("makeVector.R"")
''
""
library("makeVector.R")
package("makeVector.R")
load("makeVector.R")
source("makeVector.R")
makeVector(24)
mv <- makeVector(24)
mv
str(mv)
source("makeVector2.R")
makeVector2(24)
source("makeVector2.R")
makeVector2(24)
x <- makeVector2(24)
class(x)
a <- matrix(c(1,1,4,0,3,1,4,4,0), 3,3)
a
det(a)
solve(a)
getwd()
setwd("/Users/andre/Documents/Training/Coursera/RWorkingDirectory/ProgrammingAssignment2/")
getwd()
dir()
source("cachematrix.R")
x <- matrix(1:6, 2,3)
x
solve(x)
x <- matrix(1:9, 3,3)
x
solve(x)
x <- matrix(c(1,3,3,8), 2,2)
x
solve(x)
source("cachematrix.R")
makeCacheMatrix(x)
makeCacheMatrix(c(1,3,3,8), 2,2)
makeCacheMatrix(x)
source("cachematrix.R")
makeCacheMatrix(x)
source("cachematrix.R")
makeCacheMatrix(x)
source("cachematrix.R")
makeCacheMatrix(c(1,3,3,8), 2,2)
x <- matrix(c(1,3,3,8), 2,2)
makeCacheMatrix(x
)
install.packages("plotrix")
R
myString <- "Hello, World!"
print(myString)
